The script is designed to check the strength of a password entered by the user. The script performs several checks on the entered password to ensure that it meets certain security standards. The script can be used in two ways: as a GUI version or as a CLI version.

GUI version:

1. The script uses the Tkinter library to create a graphical user interface (GUI) for checking passwords. The GUI consists of a label, an entry field, and a submit button.
2. The label is used to prompt the user to enter a password. The entry field is used to allow the user to enter a password. The submit button is used to trigger the password check when clicked.
3. When the user clicks the submit button, the on_submit() function is called. This function gets the text entered in the entry field and passes it to the check_password() function.
4. The check_password() function checks the password against several conditions:
- The password must be at least 8 characters long.
- The password must contain at least one numeric character.
- The password must contain at least one special character.
- The password cannot contain any consecutive repeating characters more than 2 times.
- The password is checked against a list of passwords in a file 'passwords.txt' located in a directory 'db-SecLists'
5. If the password passes all the conditions, the function returns the message "Secure password."
6. Otherwise, the function returns an error message indicating the specific condition that the password failed.
The result of the check_password() function is then displayed to the user using a message box.


CLI version:

1. The script takes input and displays output in the command line interface (CLI) instead of using a GUI.
2. It prompts the user to enter a password, which is stored in a variable named password.
3. Then the check_password() function is called and passed the password variable as an argument.
4. The check_password() function performs several checks on the password to ensure that it meets certain security standards:
- The password must be at least 8 characters long.
- The password must contain at least one numeric character.
- The password must contain at least one special character.
- The password cannot contain any consecutive repeating characters more than 2 times.
- The password is checked against a list of passwords in a file 'passwords.txt' located in a directory 'db-SecLists'
5. If the password passes all the conditions, the function returns the message "Secure password."
6. Otherwise, the function returns an error message indicating the specific condition that the password failed.
7. The result of the check_password() function is then printed to the console using the print() function.
The script uses several libraries and functions such as os, re, to perform the password checks, like os.path to get the directory path, re to check for regular expression, .isdigit() to check for numeric character and so on.
